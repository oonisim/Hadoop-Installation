---
- name: "Get list of instances in the {{ ENV_ID }} environment..."
#  ec2_remote_facts:  # Deprecated
  ec2_instance_facts:
    filters:
      "tag:environment": "{{ ENV_ID }}"
      instance-state-name: running
    region:          "{{ aws_region }}"
  register: ec2_instance_list

- name: "Get list of master instances in the {{ ENV_ID }} environment..."
  ec2_instance_facts:
    filters:
      "tag:environment"   : "{{ ENV_ID }}"
      "tag:type"          : "{{ NODE_TYPE_MASTER }}"
      instance-state-name : running
    region:          "{{ aws_region }}"
  register: ec2_instance_masters

- name: "Get list of master instances in the {{ ENV_ID }} environment..."
  ec2_instance_facts:
    filters:
      "tag:environment"   : "{{ ENV_ID }}"
      "tag:type"          : "{{ NODE_TYPE_WORKER }}"
      instance-state-name : running
    region:          "{{ aws_region }}"
  register: ec2_instance_workers

- name: "Get list of SGs in the {{ ENV_ID }} environment..."
  ec2_group_facts:
    filters:
      "tag:environment": "{{ ENV_ID }}"
    region:          "{{ aws_region }}"
    # Use environment variables
    #aws_access_key:       "{{ ec2_access_key }}"
    #aws_secret_key:       "{{ ec2_secret_key }}"
  register: ec2_sg_list

- debug:
    msg: "{{ ec2_instance_workers.instances }}"
    
- name: create hadoop configuration files...
  template:
    src:    "{{ item }}"
    dest:   "{{ HADOOP_OUTPUT_DIR }}/{{ item | basename | regex_replace('\\.j2','') }}"
  with_fileglob:
    - "{{ role_path }}/templates/hadoop/*"

- name: create spark configuration files...
  template:
    src:    "{{ item }}"
    dest:   "{{ SPARK_OUTPUT_DIR }}/{{ item | basename | regex_replace('\\.j2','') }}"
  with_fileglob:
    - "{{ role_path}}/templates/spark/*"

- name: create hosts file for /etc/hosts ...
  local_action:
    module: template
    src:    hosts.j2
    dest:   "{{ OS_OUTPUT_DIR }}/hosts"


